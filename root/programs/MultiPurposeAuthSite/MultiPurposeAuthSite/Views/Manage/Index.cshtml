@*
    //**********************************************************************************
    //* テンプレート
    //**********************************************************************************

    // 以下のLicenseに従い、このProjectをTemplateとして使用可能です。Release時にCopyright表示してSublicenseして下さい。
    // https://github.com/OpenTouryoProject/MultiPurposeAuthSite/blob/master/license/LicenseForTemplates.txt

    //**********************************************************************************
    //* クラス名        ：Manage/Index
    //* クラス日本語名  ：管理用のView
    //*
    //* 作成日時        ：－
    //* 作成者          ：－
    //* 更新履歴        ：－
    //*
    //*  日時        更新者            内容
    //*  ----------  ----------------  -------------------------------------------------
    //*  2017/04/24  西野 大介         新規
    //**********************************************************************************
*@

@using System.Web
@using Microsoft.AspNet.Identity
@using Microsoft.AspNet.Identity.Owin

@using MultiPurposeAuthSite.Resources;
@using MultiPurposeAuthSite.Models.ViewModels
@using MultiPurposeAuthSite.Models.ASPNETIdentity;
@using MultiPurposeAuthSite.Models.ASPNETIdentity.Manager
@using MultiPurposeAuthSite.Models.ASPNETIdentity.Entity

@model ManageIndexViewModel
@{
    ViewBag.Title = ManageViews.IndexTitle;

    #region Role

    IList<string> roles = null;
    bool canShowOAuthScreen = false;
    if (User.Identity.IsAuthenticated)
    {
        if (Session["Roles"] == null)
        {
            ApplicationUserManager userManager
                = HttpContext.Current.GetOwinContext().GetUserManager<ApplicationUserManager>();
            ApplicationUser user = userManager.FindById(User.Identity.GetUserId()); // 同期版でOK。
            if (user == null)
            {
                roles = new List<string>();
            }
            else
            {
                roles = userManager.GetRoles(user.Id); // 同期版でOK。
            }
        }
        else
        {
            roles = (IList<string>)Session["Roles"];
        }

        foreach (string role in roles)
        {
            if (role == ASPNETIdentityConst.Role_SystemAdmin
                || role == ASPNETIdentityConst.Role_Admin)
            {
                // サインアップしていないユーザは使用不可
                canShowOAuthScreen = true;
            }
        }
    }

    #endregion
}

@* スクリプト・セクション（RenderSection("HeaderScriptsSection", required: true)に出力されます） *@
@section HeaderScriptsSection{
    <!-- Head 部の section -->
}

<h2>@ViewBag.Title</h2>
<p class="text-success">@ViewBag.StatusMessage</p>
<div class="row">
    <div class="col-md-8">
        <h4>@ManageViews.IndexH4</h4>
        <hr />
        <dl class="dl-horizontal">
@if (ASPNETIdentityConfig.AllowEditingUserName)
{
    // UserNameの変更が許可されている場合。
    if (ASPNETIdentityConfig.RequireUniqueEmail)
    {
            // UserName＝メアドの場合
            <dt>Email :</dt>
            <dd>
                [@Html.ActionLink(ManageViews.IndexEmailChangeActionLink, "ChangeEmail")]
            </dd>
    }
    else
    {
            // UserName≠メアドの場合
            <dt>UserName :</dt>
            <dd>
                [@Html.ActionLink(ManageViews.IndexUserNameChangeActionLink, "ChangeUserName")]
            </dd>
    }
}
else
{
    // UserNameの変更が許可されていない場合。
}
            <dt>Password :</dt>
            <dd>
                [
@if (Model.HasPassword)
{
                    @Html.ActionLink(ManageViews.IndexChangePasswordActionLink, "ChangePassword")
}
else
{
                    @Html.ActionLink(ManageViews.IndexSetPasswordActionLink, "SetPassword")
}
                ]
            </dd>

@if (ASPNETIdentityConfig.RequireUniqueEmail)
{
    // UserName＝メアドの場合
}
else
{
    // UserName≠メアドの場合（のメアド追加
    if (ASPNETIdentityConfig.CanEditEmail)
    {
        // メアドの変更が許可されている場合。

            <dt>@ManageViews.IndexEmail :</dt>
            <dd>
                @if (string.IsNullOrEmpty(Model.Email))
                {
                    <text>None</text><br />
                    <text>[&nbsp;&nbsp;@Html.ActionLink(ManageViews.IndexEmailAddActionLink, "AddEmail")&nbsp;&nbsp;]</text>
                }
                else
                {
                    <text>@Model.Email</text><br />
                    <text>[&nbsp;&nbsp;@Html.ActionLink(ManageViews.IndexEmailAddActionLink, "AddEmail")&nbsp;&nbsp;]</text>
                    using (Html.BeginForm("RemoveEmail", "Manage", FormMethod.Post, new { @class = "form-horizontal", role = "form", onsubmit = "Fx_OnSubmit();" }))
                    {
                        @Html.AntiForgeryToken()
                        <text>[<input type="submit" value="@ManageViews.IndexEmailRemoveButton" class="btn-link" />]</text>
                    }
                }
            </dd>
    }
    else
    {
        // メアドの変更が許可されていない場合。
    }
}

@if (ASPNETIdentityConfig.CanEditPhone)
{
    // 電話番号の変更が許可されている場合。

            <dt>@ManageViews.IndexPhoneNumber :</dt>
            <dd>

            @*"Add" or "Remove"*@
            @if (string.IsNullOrEmpty(Model.PhoneNumber))
            {
                    <text>None</text><br />
                    <text>[&nbsp;&nbsp;@Html.ActionLink(ManageViews.IndexPhoneNumberAddActionLink, "AddPhoneNumber")&nbsp;&nbsp;]</text>
            }
            else
            {
                    <text>@Model.PhoneNumber</text><br/>
                    <text>[&nbsp;&nbsp;@Html.ActionLink(ManageViews.IndexPhoneNumberAddActionLink, "AddPhoneNumber")&nbsp;&nbsp;]</text>

                using (Html.BeginForm("RemovePhoneNumber", "Manage", FormMethod.Post, new { @class = "form-horizontal", role = "form", onsubmit = "Fx_OnSubmit();" }))
                {
                        @Html.AntiForgeryToken()
                        <text>[<input type="submit" value="@ManageViews.IndexPhoneNumberRemoveButton" class="btn-link" />]</text>
                }
            }
            </dd>
}
else
{
    // 電話番号の変更が許可されていない場合。
}

@if (ASPNETIdentityConfig.CanEdit2FA)
{
    // 2要素認証の変更が許可されている場合。
            <dt>@ManageViews.IndexTwoFactorAuth :</dt>
            <dd>
            @if (Model.TwoFactor)
            {
                using (Html.BeginForm("DisableTwoFactorAuthentication", "Manage", FormMethod.Post, new { @class = "form-horizontal", role = "form", onsubmit = "Fx_OnSubmit();" }))
                {
                        @Html.AntiForgeryToken()
                        <text>
                            @ManageViews.IndexTwoFactorAuthEnableStatus , [<input type="submit" value="@ManageViews.IndexTwoFactorAuthToDisabledButton" class="btn btn-link" />]
                        </text>
                }
            }
            else
            {
                using (Html.BeginForm("EnableTwoFactorAuthentication", "Manage", FormMethod.Post, new { @class = "form-horizontal", role = "form", onsubmit = "Fx_OnSubmit();" }))
                {
                        @Html.AntiForgeryToken()
                        <text>
                            @ManageViews.IndexTwoFactorAuthDisableStatus , [<input type="submit" value="@ManageViews.IndexTwoFactorAuthToEnabledButton" class="btn btn-link" />]
                        </text>
                }
            }
            </dd>
}
else
{
    // 2要素認証の変更が許可されていない場合。
}

@if (ASPNETIdentityConfig.CanEditExtLogin)
{
    // 外部ログインの変更が許可されている場合。
            <dt>@ManageViews.IndexExternalLogins :</dt>
            <dd>
                @Model.Logins.Count [ @Html.ActionLink(ManageViews.IndexExternalLoginsActionLink, "ManageLogins") ]
            </dd>
}
else
{
    // 外部ログインの変更が許可されていない場合。
}

@if (ASPNETIdentityConfig.CanEditPayment)
{
    // 支払い元情報の変更が許可されている場合。

            <dt>@ManageViews.IndexPaymentInformation :</dt>

            <dd>

            @*"Add" and "Charge" or "Remove or Change"*@
            @if (!Model.HasPaymentInformation)
            {
                        <text>None</text><br />
                        <text>[&nbsp;&nbsp;@Html.ActionLink(ManageViews.IndexPaymentInformationAddActionLink, "AddPaymentInformation")&nbsp;&nbsp;]</text>
            }
            else
            {
                        <text>XXXXXXXXXX</text><br />
                        <text>[&nbsp;&nbsp;@Html.ActionLink(ManageViews.IndexPaymentInformationChangeActionLink, "AddPaymentInformation")&nbsp;&nbsp;]</text>

                using (Html.BeginForm("RemovePaymentInformation", "Manage", FormMethod.Post, new { @class = "form-horizontal", role = "form", onsubmit = "Fx_OnSubmit();" }))
                {
                        @Html.AntiForgeryToken()
                        <text>[<input type="submit" value="@ManageViews.IndexPaymentInformationRemoveButton" class="btn-link" />]</text>
                }

                if (ASPNETIdentityConfig.IsDebug)
                {
                    using (Html.BeginForm("ChargeByPaymentInformation", "Manage", FormMethod.Post, new { @class = "form-horizontal", role = "form", onsubmit = "Fx_OnSubmit();" }))
                    {
                        @Html.AntiForgeryToken()
                        <text>[<input type="submit" value="@ManageViews.IndexPaymentButton" class="btn-link" />]</text><br/>
                        <text>※ If test the this function, there is needs to obtain the OAuth2 access token beforehand.</text>
                    }
                }
            }
            </dd>
}
else
{
    // 支払い元情報の変更が許可されていない場合。
}

@if (ASPNETIdentityConfig.CanEditUnstructuredData)
{
    // 非構造化データの変更が許可されていない場合。
            <dt>@ManageViews.IndexUnstructuredData :</dt>
            <dd>

                @*"Add" and "Remove or Change"*@
                @if (!Model.HasUnstructuredData)
                {
                    <text>None</text><br />
                    <text>[&nbsp;&nbsp;@Html.ActionLink(ManageViews.IndexUnstructuredDataAddActionLink, "AddUnstructuredData")&nbsp;&nbsp;]</text>
                }
                else
                {
                    <text>XXXXXXXXXX</text><br />
                    <text>[&nbsp;&nbsp;@Html.ActionLink(ManageViews.IndexUnstructuredDataChangeActionLink, "AddUnstructuredData")&nbsp;&nbsp;]</text>

                    using (Html.BeginForm("RemoveUnstructuredData", "Manage", FormMethod.Post, new { @class = "form-horizontal", role = "form", onsubmit = "Fx_OnSubmit();" }))
                    {
                        @Html.AntiForgeryToken()
                        <text>[<input type="submit" value="@ManageViews.IndexUnstructuredDataRemoveButton" class="btn-link" />]</text>
                    }
                }
            </dd>
}
else
{
    // 非構造化データの変更が許可されていない場合。
}

@if (ASPNETIdentityConfig.CanEditOAuth2Data && canShowOAuthScreen)
{
    // OAuth2データの変更が許可されている場合。
            <dt>EditOAuth2Data :</dt>
            <dd>
                @*"Add" and "Remove or Change"*@
                @if (!Model.HasOAuth2Data)
                {
                    <text>None</text><br />
                    <text>[&nbsp;&nbsp;@Html.ActionLink(ManageViews.IndexOAuth2DataAddActionLink, "AddOAuth2Data")&nbsp;&nbsp;]</text>
                }
                else
                {
                    <text>XXXXXXXXXX</text><br />
                    <text>[&nbsp;&nbsp;@Html.ActionLink(ManageViews.IndexOAuth2DataChangeActionLink, "AddOAuth2Data")&nbsp;&nbsp;]</text><br />
                    using (Html.BeginForm("GetOAuth2Token", "Manage", FormMethod.Post, new { @class = "form-horizontal", role = "form", onsubmit = "Fx_OnSubmit();" }))
                    {
                        @Html.AntiForgeryToken()
                        <text>scope : </text> @Html.TextBoxFor(m => m.Scopes) <br />
                        <text>[<input type="submit" value="@ManageViews.IndexOAuth2TokenGetButton" class="btn-link" />]</text>
                    }
                    using (Html.BeginForm("RemoveOAuth2Data", "Manage", FormMethod.Post, new { @class = "form-horizontal", role = "form", onsubmit = "Fx_OnSubmit();" }))
                    {
                        @Html.AntiForgeryToken()
                        <text>[<input type="submit" value="@ManageViews.IndexOAuth2DataRemoveButton" class="btn-link" />]</text>
                    }
                }
</dd>
}
else
{
    // OAuth2データの変更が許可されていない場合。
}

@if (ASPNETIdentityConfig.CanEditFIDO2Data)
{
    // FIDO2データの変更が許可されている場合。
            <dt>EditFIDO2Data :</dt>
            <dd>
                @*"Add" and "Remove or Change"*@
                @if (!Model.HasFIDO2Data)
                {
                    <text>None</text><br />
                    <text>[&nbsp;&nbsp;@Html.ActionLink(ManageViews.IndexFIDO2DataAddActionLink, "AddFIDO2Data")&nbsp;&nbsp;]</text>
                }
                else
                {
                    <text>XXXXXXXXXX</text><br />
                    using (Html.BeginForm("RemoveFIDO2Data", "Manage", FormMethod.Post, new { @class = "form-horizontal", role = "form", onsubmit = "Fx_OnSubmit();" }))
                    {
                        @Html.AntiForgeryToken()
                        <text>[<input type="submit" value="@ManageViews.IndexFIDO2DataRemoveButton" class="btn-link" />]</text>
                    }
                }
            </dd>
}
else
{
    // FIDO2データの変更が許可されていない場合。
}

@if (ASPNETIdentityConfig.CanUseGdprFunction)
{
    // GDPR 個人情報管理が許可されている場合。
            <dt>ManageGdprData :</dt>
            <dd>
                <text>[&nbsp;&nbsp;@Html.ActionLink(ManageViews.IndexManageGdprData, "ManageGdprData")&nbsp;&nbsp;]</text>
            </dd>
}
else
{
    // FIDO2データの変更が許可されていない場合。
}
        </dl>
    </div>
</div>

@* スクリプト・セクション（RenderSection("FooterScriptsSection", required: true)に出力されます） *@
@section FooterScriptsSection{
    <!-- Footer 部の section -->
}