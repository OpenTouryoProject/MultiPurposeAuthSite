@*
    //**********************************************************************************
    //* テンプレート
    //**********************************************************************************

    // 以下のLicenseに従い、このProjectをTemplateとして使用可能です。Release時にCopyright表示してSublicenseして下さい。
    // https://github.com/OpenTouryoProject/MultiPurposeAuthSite/blob/master/license/LicenseForTemplates.txt

    //**********************************************************************************
    //* クラス名        ：ManageLogins
    //* クラス日本語名  ：外部ログインの管理用のView
    //*
    //* 作成日時        ：－
    //* 作成者          ：－
    //* 更新履歴        ：－
    //*
    //*  日時        更新者            内容
    //*  ----------  ----------------  -------------------------------------------------
    //*  2017/04/24  西野 大介         新規
    //**********************************************************************************
*@

@using Microsoft.Owin.Security
@using MultiPurposeAuthSite.Resources;
@using MultiPurposeAuthSite.Models.ViewModels
@model ManageLoginsViewModel
@{
    ViewBag.Title = ManageViews.ManageLoginsTitle;
}

@* スクリプト・セクション（RenderSection("HeaderScriptsSection", required: true)に出力されます） *@
@section HeaderScriptsSection{
    <!-- Head 部の section -->
}

<h2>@ViewBag.Title.</h2>

<p class="text-success">@ViewBag.StatusMessage</p>
@{
    var loginProviders = Context.GetOwinContext().Authentication.GetExternalAuthenticationTypes();
    if (loginProviders.Count() == 0) {
        <div>
            <p>
                @ManageViews.ManageLoginsNoExternalAuthSvc
                @*
                    See <a href="http://go.microsoft.com/fwlink/?LinkId=313242">this article</a>
                    for details on setting up this ASP.NET application to support logging in via external services.
                    外部サービス経由のログインをサポートするようにこの ASP.NET アプリケーションを設定する方法の
                    詳細については、<a href="http://go.microsoft.com/fwlink/?LinkId=313242">こちらの記事</a>をご覧ください。
                *@
            </p>
        </div>
    }
    else
    {
        if (Model.CurrentLogins.Count > 0)
        {
            <hr />
            <h4>@ManageViews.ManageLoginsRegistered</h4>
            <hr />
            <table>
                <tbody>
                    @foreach (var account in Model.CurrentLogins)
                    {
                        <tr>
                            <td>@account.LoginProvider</td>
                            <td>,&nbsp;</td>
                            <td>
                                @if (ViewBag.ShowRemoveButton)
                                {
                                    using (Html.BeginForm("RemoveLogin", "Manage", FormMethod.Post, new { onsubmit = "Fx_OnSubmit();" }))
                                    {
                                        @Html.AntiForgeryToken()
                                        <div>
                                            @Html.Hidden("loginProvider", account.LoginProvider)
                                            @Html.Hidden("providerKey", account.ProviderKey)
                                            <input type="submit" class="btn btn-default" value="@ManageViews.ManageLoginsRemoveButton" title="@string.Format(ManageViews.ManageLoginsRemoveButtonTitle, account.LoginProvider)" />
                                        </div>
                                    }
                                }
                                else
                                {
                                    @: &nbsp;
                                }
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        }

        if (Model.OtherLogins.Count > 0)
        {
            using (Html.BeginForm("ExternalLogin", "Manage", FormMethod.Post, new { onsubmit = "Fx_OnSubmit();" }))
            {
                @Html.AntiForgeryToken()
                <hr />
                <h4>@ManageViews.ManageLoginsNonRegistered</h4>
                <hr />
                <div id="socialLoginList">
                <p>
                    @foreach (AuthenticationDescription p in Model.OtherLogins)
                    {
                        <button type="submit" class="btn btn-default" id="@p.AuthenticationType" name="provider" value="@p.AuthenticationType" title="@string.Format(ManageViews.ManageLoginsAddButtonTitle, p.Caption)">@p.AuthenticationType</button>
                    }
                </p>
                </div>
            }
        }
    }
}

@* スクリプト・セクション（RenderSection("FooterScriptsSection", required: true)に出力されます） *@
@section FooterScriptsSection{
    <!-- Footer 部の section -->
}