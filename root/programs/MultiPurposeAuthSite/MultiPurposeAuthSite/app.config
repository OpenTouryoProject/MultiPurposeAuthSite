<?xml version="1.0" encoding="utf-8"?>
<appSettings>
  <add key="webpages:Version" value="3.0.0.0" />
  <add key="webpages:Enabled" value="false" />
  <add key="PreserveLoginUrl" value="true" />
  <add key="ClientValidationEnabled" value="true" />
  <add key="UnobtrusiveJavaScriptEnabled" value="true" />

  <!-- ================================================================ -->

  <!-- フレームワークの使用するパラメータ - start -->
  <!-- 基盤画面パス -->
  <add key="FxErrorScreenPath" value="/MultiPurposeAuthSite/Error/Index" />
  <!--リソース ファイルの場合-->
  <add key="FxXMLMSGDefinition" value="C:\root\files\resource\MultiPurposeAuthSite\Xml\MSGDefinition.xml" />
  <add key="FxXMLSPDefinition" value="C:\root\files\resource\MultiPurposeAuthSite\Xml\SPDefinition.xml" />
  <!-- フレームワークの使用するパラメータ - end -->

  <!-- 共通部品の使用するパラメータ - start -->
  <!-- Log4Netのコンフィグファイルへのパス -->
  <add key="FxLog4NetConfFile" value="C:\root\files\resource\MultiPurposeAuthSite\Log\SampleLogConf.xml" />
  <!-- セッションタイムアウト検出機能のon・off -->
  <add key="FxSessionTimeOutCheck" value="off" />
  <!-- 共通部品の使用するパラメータ - end -->

  <!-- アプリケーションの使用するパラメータ - start -->
  <!-- キャッシュ制御機能のon・off -->
  <add key="FxCacheControl" value="ON"/>
  <!-- アプリケーションの使用するパラメータ - end -->

  <!-- ================================================================ -->

  <!-- InternetProxy設定 (Internet アクセス用、) -->
  <add key="UseInternetProxy" value="false" />
  <add key="InternetProxyURL" value="[If necessary, please fill in internal proxy url]" />
  <add key="InternetProxyUID" value="[If necessary, please fill in user Id for proxy credential]" />
  <add key="InternetProxyPWD" value="[If necessary, please fill in password for proxy credential]" />

  <!-- IntranetProxy設定 (Intranet アクセス用、基本falseを想定) -->
  <add key="UseIntranetProxy" value="false" />
  <add key="IntranetProxyURL" value="" />
  <add key="IntranetProxyUID" value="" />
  <add key="IntranetProxyPWD" value="" />

  <!-- DebugProxy設定 (Fiddler) -->
  <add key="UseDebugProxy" value="false" />
  <add key="DebugProxyURL" value="http://localhost:8888/" />
  <add key="DebugProxyUID" value="" />
  <add key="DebugProxyPWD" value="" />

  <!-- ================================================================ -->

  <!-- オンライン決済サービス -->
  <!-- Stripe -->
  <add key="EnableStripe" value="false" />
  <add key="Stripe_PK" value="[If necessary, please fill in this input item like pk_test_xxxxx]" />
  <add key="Stripe_SK" value="[If necessary, please fill in this input item like sk_test_xxxxx]" />
  <!-- PAY.JP -->
  <add key="EnablePAYJP" value="false" />
  <add key="PAYJP_PK" value="[If necessary, please fill in this input item like pk_test_xxxxx]" />
  <add key="PAYJP_SK" value="[If necessary, please fill in this input item like sk_test_xxxxx]" />

  <!-- ================================================================ -->

  <!-- ASP.NET Identity -->

  <!-- Debugかどうか -->
  <add key="IsDebug" value="true" />
  <add key="EnabeDebugTraceLog" value="true" />

  <!-- User store type (mem, sql, ora, npg) -->
  <add key="UserStoreType" value="mem" />

  <!-- UserListCount -->
  <add key="UserListCount" value="50" />

  <!-- Administrator（システム管理者のアカウント） -->
  <add key="AdministratorUID" value="[Please fill in this input item.]" />
  <add key="AdministratorPWD" value="[Please fill in this input item.]" /> <!-- PWDのみ、初期化後削除可能 -->

  <!-- Notification Provider -->
  <!-- Smtp -->
  <add key="SmtpHostName" value="[e.g. : smtp.gmail.com]" />
  <add key="SmtpPortNo" value="587" />
  <add key="SmtpSSL" value="true" />
  <add key="SmtpAccountUID" value="[xxxxx@gmail.com]" />
  <add key="SmtpAccountPWD" value="[password of xxxxx@gmail.com]" />
  <!-- Twilio -->
  <add key="TwilioAccountSid" value="[TwilioAccountSid]" />
  <add key="TwilioAuthToken" value="[TwilioAuthToken]" />
  <add key="TwilioFromPhoneNumber" value="[TwilioFromPhoneNumber]" />
  <!-- Firebase Cloud Messaging (FCM) -->
  <add key="FirebaseServiceAccountKey" value="C:\root\files\resource\MultiPurposeAuthSite\FirebaseServiceAccountKey.json" />

  <!-- 文面ファイルのフォルダ -->
  <add key="ContentOfLetterFilePath" value="C:\root\files\resource\MultiPurposeAuthSite\Txt" />

  <!-- 登録されるTestUserのpassword -->
  <add key="TestUserPWD" value="[password of TestUser]" />

  <!--ユーザ名検証（既定のユーザ名は、E-mail-->
  <add key="AllowOnlyAlphanumericUserNames" value="false" />
  <!-- UserNameがEmailかどうか -->
  <add key="RequireUniqueEmail" value="true" />
  <!-- 約款画面を表示するかどうか -->
  <add key="DisplayAgreementScreen" value="false" />
  <!-- メアド検証リンクの有効期限 24  時間 -->
  <add key="EmailConfirmationTokenLifespanFromHours" value="24" />
  <!-- UserNameの編集を許可するかどうか -->
  <add key="AllowEditingUserName" value="true" />
  <!-- UserNameとEmail編集時にパスワードを要求するかどうか -->
  <add key="RequirePasswordInEditingUserNameAndEmail" value="false" />

  <!--パスワード検証（8文字以上の大文字・小文字、数値、記号-->
  <add key="RequiredLength" value="8" />
  <add key="RequireNonLetterOrDigit" value="true" />
  <add key="RequireDigit" value="true" />
  <add key="RequireLowercase" value="true" />
  <add key="RequireUppercase" value="true" />
  <add key="StretchCount" value="1000" />

  <!--ユーザ ロックアウト（5 回入力ミスすると、5分ロックアウト-->
  <add key="UserLockoutEnabledByDefault" value="true" />
  <add key="DefaultAccountLockoutTimeSpanFromSeconds" value="300" />
  <add key="MaxFailedAccessAttemptsBeforeLockout" value="5" />

  <!-- Cookie認証チケットの有効期限は2週間 24 * 14 = 336 時間 -->
  <add key="AuthCookieExpiresFromHours" value="336" />
  <!-- Cookie認証チケットのSliding（再発行）機能 -->
  <add key="AuthCookieSlidingExpiration" value="true" />

  <!-- 2FA : TwoFactorAuthentication -->
  <!-- 必要に応じてユーザが有効にするので初期値は false -->
  <add key="TwoFactorEnabled" value="false" />
  <!-- 2FA Cookieの有効期限は2週間 24 * 14 = 336 時間 -->
  <add key="TwoFactorCookieExpiresFromHours" value="336" />

  <!-- SecurityStamp（検証間隔は10秒、本番は長めに設定-->
  <add key="SecurityStampValidateIntervalFromSeconds" value="10" />

  <!-- その他、属性の編集を許可するかどうか -->
  <add key="CanEditEmail" value="true" />
  <add key="CanEditPhone" value="true" />
  <add key="CanEdit2FA" value="true" />
  <add key="CanEditUnstructuredData" value="true" />
  <add key="CanEditSaml2OAuth2Data" value="true" />
  <add key="CanUseGdprFunction" value="true" />

  <!-- FIDOServerMode: none, mspass, webauthn -->
  <add key="FIDOServerMode" value="webauthn" />

  <!--本サイトでSaltとして機能する値-->
  <!--・PPID生成に使用するSalt-->
  <!--・外部ログインの追加時に XSRF の防止-->
  <add key="SaltParameter" value="[Please set a random string for each site.]" />

  <!-- ================================================================ -->

  <!--外部ログイン-->

  <!--外部ログイン（MicrosoftAccountAuthentication）-->
  <add key="MicrosoftAccountAuthentication" value="false" />
  <add key="MicrosoftAccountAuthenticationClientId" value="[If necessary, please fill in ClientId of Microsoft Account]" />
  <add key="MicrosoftAccountAuthenticationClientSecret" value="[If necessary, please fill in ClientSecret of Microsoft Account]" />

  <!--外部ログイン（GoogleAuthentication）-->
  <add key="GoogleAuthentication" value="false" />
  <add key="GoogleAuthenticationClientId" value="[If necessary, please fill in ClientId of Google Authentication]" />
  <add key="GoogleAuthenticationClientSecret" value="[If necessary, please fill in ClientSecret of Google Authentication]" />

  <!--外部ログイン（FacebookAuthentication）-->
  <add key="FacebookAuthentication" value="false" />
  <add key="FacebookAuthenticationClientId" value="[If necessary, please fill in ClientId of Facebook Authentication]" />
  <add key="FacebookAuthenticationClientSecret" value="[If necessary, please fill in ClientSecret of Facebook Authentication]" />

  <!--外部ログイン（TwitterAuthentication）-->
  <add key="TwitterAuthentication" value="false" />
  <add key="TwitterAuthenticationClientId" value="[If necessary, please fill in ClientId of Twitter Authentication]" />
  <add key="TwitterAuthenticationClientSecret" value="[If necessary, please fill in ClientSecret of Twitter Authentication]" />

  <!-- ================================================================ -->

  <!-- STS (SAML2, OAuth2/OIDC, FAPI)-->

  <!-- プロパティ -->
  <add key="IssuerId" value="https://ssoauth.opentouryo.com" />
  <add key="OAuth2AccessTokenExpireTimeSpanFromMinutes" value="360" />
  <add key="OAuth2RefreshTokenExpireTimeSpanFromDays" value="14" />
  <add key="OidcIdTokenExpireTimeSpanFromMinutes" value="30" />
  <add key="DeviceAuthZExpireTimeSpanFromSeconds" value="600" />
  <add key="DeviceAuthZPollingIntervalSeconds" value="5" />
  <add key="CibaExpireTimeSpanFromSeconds" value="600" />
  <add key="CibaPollingIntervalSeconds" value="5" />

  <!-- 署名に使用する X.509 証明書に関するパラメタ -->
  <add key="RsaPfxPassword" value="test" />
  <add key="RsaPfxFilePath" value="C:\root\files\resource\X509\SHA256RSA_Server.pfx" />
  <add key="EcdsaPfxPassword" value="test" />
  <add key="EcdsaPfxFilePath" value="C:\root\files\resource\X509\SHA256ECDSA_Server.pfx" />
  <add key="JwkSetFilePath" value="C:\root\files\resource\MultiPurposeAuthSite\JwkSet.json" />

  <!-- Grant Typeの有効・無効 -->
  <add key="EnableAuthorizationCodeGrantType" value="true" />
  <add key="EnableImplicitGrantType" value="true" />
  <add key="EnableResourceOwnerPasswordCredentialsGrantType" value="true" />
  <add key="EnableClientCredentialsGrantType" value="true" />
  <add key="EnableJwtBearerTokenFlowGrantType" value="true" />
  <add key="EnableDeviceAuthZGrantType" value="true" />
  <add key="EnableCibaGrantType" value="true" />
  <add key="EnableRefreshToken" value="true" />

  <add key="EnableOpenIDConnect" value="true" />

  <!-- AuthorizationServerエンドポイント --> 
  <add key="OAuth2AuthorizationServerEndpointsRootURI" value="https://localhost:44300/MultiPurposeAuthSite" />

  <!-- 認可エンドポイント -->
  <add key="OAuth2AuthorizeEndpoint" value="/authorize" />
  <add key="Saml2RequestEndpoint" value="/saml2request" />

  <!-- Device AuthZ -->
  <add key="DeviceAuthZAuthorizeEndpoint" value="/device_authz" />
  <add key="DeviceAuthZVerifyEndpoint" value="/device_verify" />

  <!-- CIBA -->
  <add key="CibaAuthorizeEndpoint" value="/ciba_authz" />
  <add key="CibaPushResultEndpoint" value="/ciba_result" />

  <!-- Tokenエンドポイント -->
  <add key="OAuth2TokenEndpoint" value="/token" />

  <!-- WebAPI -->
  <!-- /userinfo -->
  <add key="OAuth2UserInfoEndpoint" value="/userinfo" />
  <!-- /revoke -->
  <add key="OAuth2RevokeTokenEndpoint" value="/revoke" />
  <!-- /introspect -->
  <add key="OAuth2IntrospectTokenEndpoint" value="/introspect" />

  <!-- 課金処理 -->
  <add key="ChageToUserWebAPI" value="/ChageToUser" />
  <!-- プッシュ通知 -->
  <add key="SetDeviceTokenWebAPI" value="/SetDeviceToken" />
  <add key="TwoFactorAuthPushResultWebAPI" value="/TwoFactorAuthPushResult" />

  <!-- HybridFlowのテスト用 -->
  <add key="TestHybridFlowWebAPI" value="/TestHybridFlow" />

  <!-- Redirectエンドポイント -->
  <!--  - self_code : Authorization Codeグラント種別 -->
  <add key="OAuth2AuthorizationCodeGrantClient_Manage" value="/Manage/OAuth2AuthorizationCodeGrantClient" />

  <!-- Client -->

  <!-- Clientエンドポイント -->
  <add key="OAuth2ClientEndpointsRootURI" value="https://localhost:44300/MultiPurposeAuthSite" />

  <!-- Redirectエンドポイント -->
  <!--  Redirectエンドポイント（テスト用）のロックダウン -->
  <add key="IsLockedDownRedirectEndpoint" value="false" />
  <!--  - test_self_saml : AssertionConsumerService -->
  <add key="Saml2ResponseEndpoint" value="/Account/AssertionConsumerService" />
  <!--  - test_self_code : Authorization Codeグラント種別 -->
  <add key="OAuth2AuthorizationCodeGrantClient_Account" value="/Account/OAuth2AuthorizationCodeGrantClient" />
  <!--  - test_self_token : Implicitグラント種別 -->
  <add key="OAuth2ImplicitGrantClient_Account" value="/Account/OAuth2ImplicitGrantClient" />

  <!-- クライアント識別子 (client_id, client_secret, redirect_uri) -->
  <!-- このセクションは、CreateClientsIdentity.exeを使用して生成できます。 -->
  <!-- 本稼働前にかならず、以下のclient_id, client_secretを置き換えて下さい。 -->
  <add key="OAuth2ClientsInformation" value='
       {
         "67d328bfe8604aae83fb15fa44780d8b": {
           "client_secret": "s_FhjujXG0U6kAD-c4S5ifiKdAgqFoil_UxKuN_Ur50",
           "saml_name_id_format": "unspecified",
           "redirect_uri_saml": "test_self_saml",
           "redirect_uri_code": "test_self_code",
           "redirect_uri_token": "test_self_token",
           "client_name": "TestClient",
           "subject_types": "uname", // public, pairwise, uname
           "jwk_rsa_publickey": "eyJrdHkiOiJSU0EiLCJhbGciOiJSUzI1NiIsIm4iOiJybUxucTNjaHNudThrMTFWX2FjSjlFQXhjSFU4dzZCNzRMbU5tMFdGVkVRV1htOXQ4bTZRU2ZkQlR6ZWotMXpFYmV6WllOWVNzSkZDZ283WW4tTjFXY0FEU01neTZYaFliVDhuYmJwUTc5VG1rSV91aVNVdktycnhSaVNtMklUOVJ3WjdWN2Z0VWVibUI5YmJDME9PRFpfVGJMMFpVaE1sV05xMG5BbjBwYnFlYloySmwxWHRMRFRxOVVyeWxBdWVSZ3V2ekU3Mno1Qlh3VTE4S08yeWp5dTRBSkpIOU9aLVNmUktHeVlwU3J3OEdqRFhMNm5ObnA1TU9mTk1veTF4VWVIa0xWXzJaVUgtMktYV3hCVnJQbVhFWDNWbXlwN2VWSWFrV2ZrazNpeG41c2ZDZkxyekZIRmpfMjFlX3RlT1ZRVGVYUUlRcUpxN0FaQ0d1NmlxUVEiLCJlIjoiQVFBQiIsImtpZCI6IkVzSF9xS281eWNLeVU2c2xuaEVZRkN2a2RhWXRWUXhjSmxvX1pac3VJQncifQ",
           "jwk_ecdsa_publickey": "eyJrdHkiOiJFQyIsImFsZyI6IkVTMjU2IiwiY3J2IjoiUC0yNTYiLCJ4IjoiUUhxUmdNZHdBN0RlbUFMM09yVE1NVU9QczZkdkxMaWd1UVlSVHY4SWFybyIsInkiOiJsNlAyVEVxeng1Z19TMkEzQ1BUYXNTY00zZFM4RHQtS1lCWTNXQ0FSeENFIiwia2lkIjoiMWhPa2thNVJHVGZDbHUyS3JFSEVTcmRHcmlseC1OUzVFT3pWZ1M1Sk12TSJ9"
         },
         "22cae150d0a541d896a1bb7764074dd6": {
           "client_secret": "t1KiBmlvSYhi3XZoKIyMjPabDsmmGUgr95hERmTb1XE",
           "redirect_uri_code": "test_self_code",
           "redirect_uri_token": "test_self_token",
           "oauth2_oidc_mode": "fapi1",
           "client_name": "TestClient1",
           "tls_client_auth_subject_dn": "CN=NISHINO\\nishi",
           "jwk_rsa_publickey": "eyJrdHkiOiJSU0EiLCJhbGciOiJSUzI1NiIsIm4iOiJybUxucTNjaHNudThrMTFWX2FjSjlFQXhjSFU4dzZCNzRMbU5tMFdGVkVRV1htOXQ4bTZRU2ZkQlR6ZWotMXpFYmV6WllOWVNzSkZDZ283WW4tTjFXY0FEU01neTZYaFliVDhuYmJwUTc5VG1rSV91aVNVdktycnhSaVNtMklUOVJ3WjdWN2Z0VWVibUI5YmJDME9PRFpfVGJMMFpVaE1sV05xMG5BbjBwYnFlYloySmwxWHRMRFRxOVVyeWxBdWVSZ3V2ekU3Mno1Qlh3VTE4S08yeWp5dTRBSkpIOU9aLVNmUktHeVlwU3J3OEdqRFhMNm5ObnA1TU9mTk1veTF4VWVIa0xWXzJaVUgtMktYV3hCVnJQbVhFWDNWbXlwN2VWSWFrV2ZrazNpeG41c2ZDZkxyekZIRmpfMjFlX3RlT1ZRVGVYUUlRcUpxN0FaQ0d1NmlxUVEiLCJlIjoiQVFBQiIsImtpZCI6IkVzSF9xS281eWNLeVU2c2xuaEVZRkN2a2RhWXRWUXhjSmxvX1pac3VJQncifQ"
         },
         "6336f8ff137044c4a30bbbdcd6c2cf5b": {
           "client_secret": "e6x7pufcY8hYHaW7PaEV-7nB91UTmSlX9YW5XjmhysY",
           "redirect_uri_code": "test_self_code",
           "redirect_uri_token": "test_self_token",
           "oauth2_oidc_mode": "fapi2",
           "client_name": "TestClient2",
           "tls_client_auth_subject_dn": "CN=NISHINO\\nishi",
           "jwk_rsa_publickey": "eyJrdHkiOiJSU0EiLCJhbGciOiJSUzI1NiIsIm4iOiJybUxucTNjaHNudThrMTFWX2FjSjlFQXhjSFU4dzZCNzRMbU5tMFdGVkVRV1htOXQ4bTZRU2ZkQlR6ZWotMXpFYmV6WllOWVNzSkZDZ283WW4tTjFXY0FEU01neTZYaFliVDhuYmJwUTc5VG1rSV91aVNVdktycnhSaVNtMklUOVJ3WjdWN2Z0VWVibUI5YmJDME9PRFpfVGJMMFpVaE1sV05xMG5BbjBwYnFlYloySmwxWHRMRFRxOVVyeWxBdWVSZ3V2ekU3Mno1Qlh3VTE4S08yeWp5dTRBSkpIOU9aLVNmUktHeVlwU3J3OEdqRFhMNm5ObnA1TU9mTk1veTF4VWVIa0xWXzJaVUgtMktYV3hCVnJQbVhFWDNWbXlwN2VWSWFrV2ZrazNpeG41c2ZDZkxyekZIRmpfMjFlX3RlT1ZRVGVYUUlRcUpxN0FaQ0d1NmlxUVEiLCJlIjoiQVFBQiIsImtpZCI6IkVzSF9xS281eWNLeVU2c2xuaEVZRkN2a2RhWXRWUXhjSmxvX1pac3VJQncifQ",
           "jwk_ecdsa_publickey": "eyJrdHkiOiJFQyIsImFsZyI6IkVTMjU2IiwiY3J2IjoiUC0yNTYiLCJ4IjoiUUhxUmdNZHdBN0RlbUFMM09yVE1NVU9QczZkdkxMaWd1UVlSVHY4SWFybyIsInkiOiJsNlAyVEVxeng1Z19TMkEzQ1BUYXNTY00zZFM4RHQtS1lCWTNXQ0FSeENFIiwia2lkIjoiMWhPa2thNVJHVGZDbHUyS3JFSEVTcmRHcmlseC1OUzVFT3pWZ1M1Sk12TSJ9"
         },
         "ae5a179813234ca290c8de93ef2e31dc": {
           "redirect_uri_code": "http://localhost:12345/",
           "oauth2_oidc_mode": "device",
           "client_name": "TestClient3"
         },
         "7cecbd9282054f4a855ac77b5887582f": {
           "client_secret": "0AXrXnrvUj_rbgxTpBziy2SgDDIr9tKADjgg6j66M8E",
           "oauth2_oidc_mode": "fapi_ciba",
           "client_name": "TestClient4",
           "jwk_ecdsa_publickey": "eyJrdHkiOiJFQyIsImFsZyI6IkVTMjU2IiwiY3J2IjoiUC0yNTYiLCJ4IjoiUUhxUmdNZHdBN0RlbUFMM09yVE1NVU9QczZkdkxMaWd1UVlSVHY4SWFybyIsInkiOiJsNlAyVEVxeng1Z19TMkEzQ1BUYXNTY00zZFM4RHQtS1lCWTNXQ0FSeENFIiwia2lkIjoiMWhPa2thNVJHVGZDbHUyS3JFSEVTcmRHcmlseC1OUzVFT3pWZ1M1Sk12TSJ9"
         },
         "06d20f595b694114b710c1d85e21bb8e": {
           "client_secret": "ld47EVKDDkxleIup7Z0UQ1rVy_IR4q3lXamyNcrIUEo",
           "redirect_uri_code": "https://localhost:44300/MultiPurposeAuthSite/Account/IDFederationRedirectEndPoint",
           "redirect_uri_token": "-",
           "client_name": "IdFederation"
         },
         "f53469c17c5a432f86ce563b7805ab89": {
           "client_secret": "cKdwJb6mRKVIJpGxEWjIC94zquQltw_ECfO-55p21YM",
           "redirect_uri_code": "https://localhost:44334/Home/OAuth2AuthorizationCodeGrantClient",
           "redirect_uri_token": "hogehoge0",
           "client_name": "MVC_Sample"
         },
         "b6b393fe861b430eb4ee061006826b03": {
           "client_secret": "p2RgAFKF-JaF0A9F1tyDXp4wMq-uQZYyvTBM8wr_v8g",
           "redirect_uri_code": "https://localhost:44333/WebForms_Sample/Aspx/OAuth2/OAuth2AuthorizationCodeGrantClient.aspx",
           "redirect_uri_token": "hogehoge1",
           "client_name": "WebForms_Sample"
         },
         "f374a155909d486a9234693c34e94479": {
           "client_secret": "z54lhkewWPl4hk3eF1WYwvdqt7Fz24jYamLPZFVnWpA",
           "redirect_uri_code": "http://localhost:3000/RedirectEndpoint",
           "redirect_uri_token": "",
           "client_name": "SPA_Application"
         },
         "40319c0100f94ff3aab3004c8bdb5e52": {
           "client_secret": "m7VUuKLCK1nODl3xrLSoitw1x8N7sike9d5cXWa9_lg",
           "redirect_uri_code": "cordovatemplate://",
           "redirect_uri_token": "",
           "client_name": "Native_Application"
         }
       }
         ' />

  <!-- ================================================================ -->

  <!-- 機能のロックダウン（全てfalseでSTS専用モードで動作） -->

  <!-- サインアップ -->
  <add key="EnableSignupProcess" value="true" />
  <!-- ユーザ属性編集 -->
  <add key="EnableEditingOfUserAttribute" value="true" />
  <!-- ユーザ・ロール管理 -->
  <add key="EnableAdministrationOfUsersAndRoles" value="true" />

  <!-- IDフェデレーション -->
  <!-- 認可エンドポイント -->
  <add key="IdFederationAuthorizeEndPoint" value="https://localhost:44301/MultiPurposeAuthSite/authorize" />
  <!-- Redirectエンドポイント -->
  <add key="IdFederationRedirectEndPoint" value="https://localhost:44300/MultiPurposeAuthSite/Account/IDFederationRedirectEndPoint" />
  <!-- Tokenエンドポイント -->
  <add key="IdFederationTokenEndPoint" value="https://localhost:44301/MultiPurposeAuthSite/token" />
  <!-- UserInfoエンドポイント -->
  <add key="IdFederationUserInfoEndPoint" value="https://localhost:44301/MultiPurposeAuthSite/userinfo" />

  <!-- OAuth2, OIDC認証 -->

  <!-- Client-Server共通設定 -->
  <add key="JwkSetUri" value="/jwkcerts"/>
  <add key="RequestObjectRegUri" value="/ros" />

  <!-- Client側設定 -->
  <add key="OAuth2AndOidcClientID" value="06d20f595b694114b710c1d85e21bb8e"/>
  <add key="OAuth2AndOidcSecret" value="ld47EVKDDkxleIup7Z0UQ1rVy_IR4q3lXamyNcrIUEo"/>
  <add key="SpRp_Isser" value="https://ssoauth.opentouryo.com"/>
  <!-- Token検証用 -->
  <add key="SpRp_RsaCerFilePath" value="C:\root\files\resource\X509\SHA256RSA_Server.cer"/>
  <add key="SpRp_EcdsaCerFilePath" value="C:\root\files\resource\X509\SHA256ECDSA_Server.cer"/>
  <!-- クライアント認証用 -->
  <add key="SpRp_RsaPfxPassword" value="test"/>
  <add key="SpRp_RsaPfxFilePath" value="C:\root\files\resource\X509\SHA256RSA_Client.pfx"/>
  <add key="SpRp_EcdsaPfxPassword" value="test"/>
  <add key="SpRp_EcdsaPfxFilePath" value="C:\root\files\resource\X509\SHA256ECDSA_Client.pfx"/>
  <!-- クライアント証明書 -->
  <add key="SpRp_ClientCertPfxPassword" value="test"/>
  <add key="SpRp_ClientCertPfxFilePath" value="C:\root\files\resource\X509\SHA256RSAClientCert.pfx"/>

</appSettings>
