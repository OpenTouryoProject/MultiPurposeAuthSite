@*
    //**********************************************************************************
    //* テンプレート
    //**********************************************************************************

    // 以下のLicenseに従い、このProjectをTemplateとして使用可能です。Release時にCopyright表示してSublicenseして下さい。
    // https://github.com/OpenTouryoProject/MultiPurposeAuthSite/blob/master/license/LicenseForTemplates.txt

    //**********************************************************************************
    //* クラス名        ：Register
    //* クラス日本語名  ：サインアップ用のView
    //*
    //* 作成日時        ：－
    //* 作成者          ：－
    //* 更新履歴        ：－
    //*
    //*  日時        更新者            内容
    //*  ----------  ----------------  -------------------------------------------------
    //*  2017/04/24  西野 大介         新規
    //**********************************************************************************
*@

@model AccountRegisterViewModel
@{
    ViewBag.Title = AccountViews.RegisterTitle;
}

@* スクリプト・セクション（RenderSection("HeaderScriptsSection", required: true)に出力されます） *@
@section HeaderScriptsSection{
    <!-- Head 部の section -->
}

<h2>@ViewBag.Title</h2>
<div class="row">
    <div class="col-md-8">
        <h4>@AccountViews.RegisterH4</h4>
        <hr />
        @using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form", onsubmit = "Fx_OnSubmit();" }))
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary("", new { @class = "text-danger" })

            if (Config.RequireUniqueEmail)
            {
                <div class="form-group">
                    @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                    </div>
                </div>
            }
            else
            {
                <div class="form-group">
                    @Html.LabelFor(m => m.Name, new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(m => m.Name, new { @class = "form-control" })
                    </div>
                </div>
            }

            <div class="form-group">
                @Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
                </div>
            </div>
            
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" class="btn btn-primary" value="@AccountViews.RegisterSubmit" />
                </div>
            </div>
        }
    </div>
    <div class="col-md-4">

@if (Config.CanEditExtLogin)
{
        <div class="sample-box-1">
            @*ここに外部ログインを実装*@
            @AccountViews.ExternalLogins
            <section id="socialLoginForm">
                @await Html.PartialAsync("_ExternalLoginsListPartial", new AccountExternalLoginListViewModel { ReturnUrl = ViewBag.ReturnUrl })
            </section>
        </div>
}
    </div>
</div>

@* スクリプト・セクション（RenderSection("FooterScriptsSection", required: true)に出力されます） *@
@section FooterScriptsSection{
    <!-- Footer 部の section -->
}